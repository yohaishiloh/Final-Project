// Initialize
2C010010 //	            	 addi R1 R0 0x0010    * R1 = 16 (array size)
2C020001 //	            	 addi R2 R0 0x0001    * R2 = 1 (constant for decrementing)
00221822 //	            	 sub R3 R1 R2         * R3 = 15 (n-1, outer loop counter)					            	 
// OUTER LOOP:	 i = n-1 down to 1
00002023 //	            	 add R4 R0 R0         * R4 = 0 (inner loop counter j)		            	 
// INNER LOOP:	 j = 0 to i-1
8C850000 //	            	 lw R5 R4 0x0000      * R5 = array[j]
2C860001 //	            	 addi R6 R4 0x0001    * R6 = j + 1
8CC70000 //	            	 lw R7 R6 0x0000      * R7 = array[j+1]
00E54022 //	            	 sub R8 R7 R5
710B0000 //	            	 slti R11 R8 0x0000         * R8 = 1 if array[j+1] < array[j] (need swap)
111F0004 //	            	 beqz R8 0x0004       * If no swap needed, skip swap code					            	 
// SWAP:     	 array[j] <-> array[j+1]
AC870000 //	            	 sw R7 R4 0x0000      * array[j] = array[j+1]
ACC50000 //	            	 sw R5 R6 0x0000      * array[j+1] = array[j]					            	 
// INCREMENT INNER LOOP
2C840001 //	            	 addi R4 R4 0x0001    * j++
00834022 //	            	 sub R8 R4 R3
71090000 //	            	 slti R9 R8 0x0000         * R9 = 1 if j < i
153FFFF6 //	            	 bnez R9 0xFFF6       * If j < i, continue inner loop					            	 
// DECREMENT OUTER LOOP
00621822 //	            	 sub R3 R3 R2         * i-- (i = i - 1)
646A0000 //	            	 sgti R10 R3 0x0000        * R10 = 1 if i > 0
155FFFEF //	            	 bnez R10 0xFFEF      * If i > 0, continue outer loop					            	 
FFFF6177 //	            	 halt                 * End execution					            	 

/*
Label Report:
*XML file date: Mon 19/5/2025 16:46:22
*/