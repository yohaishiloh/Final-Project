addi R1 R0 0x0100    * R1 = 256 (end address)
addi R2 R0 0x000B    * R2 = 11 (jump target)
addi R3 R0 0x0080    * R3 = 128 (starting address for core 1)
lw R4 R3 0x0000      * Load word from memory[R3]
sgti R5 R4 0x007F    * Check if R4 > 127
beqz R5 0x0003       * If R4 > 127, skip to set R4 = 255
addi R4 R0 0x00FF    * R4 = 255
sw R4 R3 0x0000      * Save new word
jr R2                * Jump to increment section
addi R4 R0 0x0000    * Else: R4 = 0
sw R4 R3 0x0000      * Save new word
addi R3 R3 0x0001    * Increment R3 by 1
sgei R6 R3 0x0100        * Check if R3 >= 256
beqz R6 0xFFF5       * If R3 < 256, go back to loop start
lw R7 R0 0x0180
lw R7 R0 0x0190
lw R7 R0 0x01A0
lw R7 R0 0x01B0
lw R7 R0 0x01C0
lw R7 R0 0x01D0
lw R7 R0 0x01E0
lw R7 R0 0x01F0     * Force clearing the block from the cache
halt                * End execution